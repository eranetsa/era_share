<?xml version="1.0" encoding="UTF-8"?>
<templates id="ai_template" xml:space="preserve">
    <t t-name="era_ai_client.tour_ai_dialog_template">
        <!-- Modal Overlay -->
        <div class="tour-ai-modal-overlay" >  <!-- t-attf-style="display: #{props.showTourAIModel ? 'flex' : 'none'}" -->
            <div class="tour-ai-modal">
            <!-- Draggable Header -->
                <div class="modal-header" t-on-mousedown="startDragging" dir="ltr">
                <!-- Close Button -->
                    <button type="button" class="btn-close focus-purple" t-on-click="closeTourAIModel" aria-label="Close">âœ–</button>
                    <h3 style="font-size: 18px;font-weight: bold;color: #4A5568;"><t t-esc="props.title"/></h3>  <!-- Tour AI Configuration-->
                </div>
                <div class="modal-content" >
                    <!-- Script Input  (Hidden)-->
                    <div class="hidden script-input">
                        <label for="scriptInput">Script</label>
                        <textarea id="scriptInput" rows="4" cols="50" placeholder="Enter script here..." disabled="true"></textarea>
                    </div>
                    
                    <!-- Steps Input  -->
                    <div class="steps-input" style="flex: 1;" >
                        <label for="stepsInput"></label>
                        <textarea id="stepsInput" style="flex: 1; resize: none; border:none; height: 90%;"
                           cols="50" t-on-input="_onstepsInputChange" disabled="true" ></textarea>
                    </div>
                    
                    
                </div>
                    <!-- Radio Buttons (Initially hidden) -->
                    <div class="tour-mode" id="radioButtonsDiv" style="display: none;">
                        <!-- Header for the radio buttons -->
                        <h6 style="margin: 0;font-size: 18px;font-weight: bold;color: #4A5568;">Choose the Guide Mode</h6>
                        <div style="display: flex; align-items: center; gap: 20px; margin-top: 10px;">
                            <button class="btn send" 
                                    t-on-click="autoExecute"
                                    style="border: 2px solid darkgreen; background: none; height: 40px;">
                                Auto Guide
                            </button>
                            <button class="btn send" 
                                    t-on-click="manualExecute"
                                    style="border: 2px solid darkgreen; background: none; height: 40px;">
                                Manual Guide
                            </button>
                        </div>
                    </div>

                
                
                <div class="modal-footer">
                    <!-- User Input -->
                    <label for="userInput" style="display: none;"></label>
                    <textarea id="userInput" rows="4" cols="50" placeholder="Enter input here..."
                            t-model="state.userInput"
                            t-on-input="_onInputChange"
                            t-on-keydown="this._onKeyDown"
                            style="padding: 5px;flex: 1; height: 70px; resize: none; border:none;align: center;">      
                    </textarea>
                    <div>
                        <!-- Send Button -->
                         <button class="btn disabled send " 
                                t-att-class="state.userInput.trim() ? '' : 'disabled'"
                                t-on-click="_sendTourAIRequest"
                                t-att-disabled="!state.userInput.trim()"
                                style="border-color: green; height: 40px; display: inline-flex; align-items: center;
                                border-radius: 50%;margin-right: 3px;margin-left: 3px;" 
                                title="Send request..">
                            <img style="width: 35px; height: 35px;align:center;" id="send" 
                                     src="era_ai_client/static/src/icon/send_icon.png" 
                                     alt="ERA Smart AI" 
                                     class="smart-ai-img" />
                        </button>
                        <!-- Failed Execute Button -->
                         <button class="btn retry" 
                                t-att-class="state.userInput.trim() ? 'disabled' : '' "
                                t-on-click="failedExecute"
                                t-att-disabled="state.userInput.trim()"
                                style="border-color: goldenrod; height: 40px; display: inline-flex; align-items: center;
                                border-radius: 50%;margin-right: 3px;margin-left: 3px;" 
                                title="Try again for the last request...">
                            <img style="width: 35px; height: 35px;" id="retry" 
                                     src="era_ai_client/static/src/icon/retry_icon.png" 
                                     alt="ERA Smart AI" 
                                     class="smart-ai-img" />
                        </button>
                    </div>
                    
                </div>
                
                <div class="sample-dropdown-container" style="padding: 5px;">
                    <label for="sample-selector" class="dropdown-label">Select a Sample</label>
                    <div class="custom-dropdown" t-on-click="loadSamples">
                        <select id="sample-selector" class="styled-dropdown"  t-on-change="setSampleTextAndExecute" >
                            <option value="" >-- Select a sample --</option>
                            <t t-foreach="samples.list" t-as="sample" t-key="sample.id">
                                <option t-att-value="sample.name">
                                    <t t-esc="sample.name"/>
                                </option>
                            </t>
                        </select>
                    </div>
                </div>
 
            </div>
        </div>



    <style>
        /* Modal overlay style */
        .tour-ai-modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        /* Modal content style */
        .tour-ai-modal {
            cursor: move;
            position: absolute;
            top: 20px;
            right: 350px;
            background-color: white;
            border-radius: 8px;
            padding: 10px;
            width: 40%;
            height: 95%;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            overflow: hidden; /* Prevent overflow of the entire modal */
            display: flex;
            flex-direction: column;
        }

        /* Modal content container that contains everything except the footer */
        .modal-content {
            flex-grow: 1; /* Allow content to take up all available space */
            display: flex;
            flex-direction: column;
            overflow: hidden; /* Prevent overflow outside the content */
        }

        /* Header for the modal */
        .modal-header {
            cursor: move;
            background-color: #f4f4f4;
            padding: 10px;
            font-size: 18px;
            font-weight: bold;
            color: #4A5568;
            border-bottom: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        /* Footer section */
        .modal-footer {
            display: flex;
            align-items: center;
            gap: 10px;
            border: 1px solid lightgray;
            padding: 10px;
            background: #fff;
            border-radius: 8px;
            position: sticky;
            bottom: 0;
            left: 0;
            width: 100%;
            margin-top: 5px;
        }

        /* Sample button */
        .sample-btn {
            border: 1px solid lightgray;
            background: none;
            height: 40px;
            border-radius: 8px;
            margin-right: 50px;
            margin-left: 10px;
        }

        /* Hover state: Add light gray background */
        .sample-btn:hover {
            background-color: lightgray;
            border-color: lightgray;
        }

        /* Close button */
        .btn-close {
            position: absolute;
            top: 20px;
            right: 30px;
            background: transparent;
            border: none;
            cursor: pointer;
        }

        /* Scrollable area for steps input (if overflowing) */
        .steps-input {
            flex: 1;
            overflow-y: auto;  /* Allow vertical scrolling */
            resize: none;
            border: none;
            padding: 10px;
            height: 100%;  /* Let it take the remaining space inside modal */
        }

        /* Radio buttons section */
        .tour-mode {
            display: none; /* Hidden initially */
            margin-top: auto;
            padding-top: 10px;
            overflow-y: auto; /* Scroll when overflow happens */
        }

        /* Hide the script input */
        .hidden {
            display: none;
        }

        .steps-input, .tour-mode {
            max-height: 70%; /* Set max height to restrict overflow for these sections */
        }

        /* User input textarea */
        #userInput {
            padding: 5px;
            flex: 1;
            height: 70px;
            resize: none;
            border: none;
            align: center;
            max-height: 70px;
            overflow-y: auto; /* Scroll if overflow happens */
        }

        /* Button to be disabled */
        .disabled {
            pointer-events: none;
            opacity: 0.6;
            cursor: not-allowed;
        }

        /* Purple focus style for icons inside buttons */
        .focus-purple:focus {
            filter: drop-shadow(0 0 5px purple);
            transition: filter 0.3s ease;
        }

        .focus-purple:hover {
            filter: drop-shadow(0 0 5px purple);
        }

        /* yellow focus style for icons inside buttons */
        .retry:focus {
            filter: drop-shadow(0 0 5px yellow);
            transition: filter 0.3s ease;
        }

        .retry:hover {
            filter: drop-shadow(0 0 5px yellow);
        }

        /* green focus style for icons inside buttons */
        .send:focus {
            filter: drop-shadow(0 0 5px #90EE90);
            transition: filter 0.3s ease;
        }

        .send:hover {
            filter: drop-shadow(0 0 5px #90EE90);
        }

        /* Modal content behavior */
        .steps-input {
            height: auto;
            max-height: 50vh; /* Limit height for step input and allow overflow */
        }

        /* Ensure content doesn't overlap footer */
        .modal-content {
            overflow: hidden;
        }

        /* Handle overflow of content */
        .modal-footer {
            position: sticky;
            bottom: 0;
            left: 0;
            width: 100%;
            background: #fff;
        }
        /***************************************/
            /* Selection design*/

        .sample-dropdown-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            width: 100%;
            max-width: 800px;
            margin: auto;
            margin-bottom: 30px;
        }

        .dropdown-label {
            font-size: 18px;
            font-weight: bold;
            color: #4A5568;
        }

        .custom-dropdown {
            position: relative;
            width: 100%;
        }

        /* Default dropdown styling */
        .styled-dropdown {
            width: 100%;
            padding: 8px 15px;
            font-size: 17px;
            font-weight: 500;
            color: #333;
            border: none; /* Dark green border by default */
            border-radius: 8px;
            background-color: white;
            appearance: none;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
            height: 45px;
            outline: none;
            -webkit-appearance: none;
            -moz-appearance: none;
        }

        
    /**********************************************************/

    /* Reset styles of select2 for search drowpdown list */
    /* Change the dropdown arrow icon */
    .select2-container .select2-choice .select2-arrow b {
        background: none;
    }
    /* Selected option effect */
    .select2-container .select2-choice:valid {
        border-color: darkgreen !important;
        box-shadow: 0 0 5px rgba(128, 128, 128, 0.5) !important; /* Gray*/
    }

    /* Reset hover and focus styles after selection */
    .select2-container .select2-choice:hover,
    .select2-container .select2-choice:focus {
        border-color: green !important;
        box-shadow: 0 2px 5px rgba(0, 128, 0, 0.5) !important; /* Light green glow */
    }

    /* Dropdown search input */
    .select2-search input {
        height: 40px !important;
        font-size: 17px !important;
        border-radius: 8px !important;
        border: 1px solid darkgreen !important;
        padding: 8px 15px !important;
    }


    .select2-drop.select2-drop-above.select2-drop-active {
        border-top: 1px solid darkgreen;
        border-right: 1px solid darkgreen;
        border-left: 1px solid darkgreen;
    }
    .select2-container .select2-choice{
        width: 100% !important;
        height: 45px !important;
        padding: 8px 15px !important;
        font-size: 17px !important;
        font-weight: 500 !important;
        color: #333 !important;
        border: 1px solid darkgreen !important;
        border-radius: 8px !important;
        background-color: white !important;
        display: flex !important;
        align-items: center !important;
        cursor: pointer !important;
        transition: all 0.3s ease-in-out !important;
        outline: none !important;
    }
    </style>
</t>
</templates>



 

